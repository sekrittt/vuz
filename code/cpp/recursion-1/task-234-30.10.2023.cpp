#include <iostream>

using namespace std;

int G(int);
int F(int n)
{
    cout << "Выполняется функция F(" << n << ")" << endl;
    if (n > 1)
    {
        int F1;
        cout << "Рекурсивный вызов функции G(" << n << ")" << endl;
        F1 = 10 + G(n); // 1)
        cout << "Возврат значения G(" << n << ") = " << F1 << endl;
        return F1;
    }
    else
    {
        int F1;
        F1 = 1;
        cout << "База рекурсии. F(" << n << ") = " << F1 << endl;
        return F1;
    }
}

int G(int n)
{
    cout << "Выполняется функция G(" << n << ")" << endl;
    int G1;
    if (n > 1)
    {
        cout << "Рекурсивный вызов функции F(" << n - 1 << ")" << endl;
        G1 = F(n - 1); // 2)
        cout << "Возврат значения F(" << n - 1 << ") = " << G1 << endl;
        return G1;
    }
    else
    {
        G1 = F(n); // 3)
        cout << "База рекурсии. G(" << n << ") = " << G1 << endl;
        return G1;
    }
}

int main()
{
    int R = F(3);
    cout << "Возврат значения F(3) = " << R << endl;
    cout << "R = " << R << endl;
    return 0;
}

/*
Task 2:
    Выполняется функция F(3)
    Рекурсивный вызов функции G(3)
    Выполняется функция G(3)
    Рекурсивный вызов функции F(2)
    Выполняется функция F(2)
    Рекурсивный вызов функции G(2)
    Выполняется функция G(2)
    Рекурсивный вызов функции F(1)
    Выполняется функция F(1)
    База рекурсии. F(1) = 1
    Возврат значения F(1) = 1
    Возврат значения G(2) = 11
    Возврат значения F(2) = 11
    Возврат значения G(3) = 21
    Возврат значения F(3) = 21
    R = 21
Task 3:
    Выполняется функция F(3)
    Рекурсивный вызов функции G(3)
    Выполняется функция G(3)
    Рекурсивный вызов функции G(2)
    Выполняется функция G(2)
    Рекурсивный вызов функции G(1)
    Выполняется функция G(1)
    Выполняется функция F(1)
    База рекурсии. F(1) = 1
    База рекурсии. G(1) = 1
    Возврат значения G(1) = 1
    Возврат значения G(2) = 1
    Возврат значения G(3) = 11
    Возврат значения F(3) = 11
    R = 11

    F(3) -> G(3) -> G(2) -> G(1) -> Не рекурсивная ветвь G -> F(1) -> Не рекурсивная ветвь F
    3>1  -> 3>1  -> 2>1  -> 1>1  -> 1                      -> 1    -> 1
    11      11      1       1       1
Task 4:
    Выполняется функция F(3)
    Рекурсивный вызов функции G(2)
    Выполняется функция G(2)
    Рекурсивный вызов функции F(1)
    Выполняется функция F(1)
    База рекурсии. F(1) = 1
    Возврат значения F(1) = 1
    Возврат значения G(2) = 11
    Возврат значения F(3) = 11
    R = 11
    F(3) -> G(2) -> F(1) -> Не рекурсивная ветвь F
    3>1  -> 2>1  -> 1>1  -> 1
    11      11      1       1
*/
