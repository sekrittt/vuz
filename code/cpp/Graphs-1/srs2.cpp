// Зырянов Иван Бас-1

#include <iostream>

using namespace std;

const int Vmax = 5, Emax = Vmax * 2;
int head[Vmax];
int next_el[Emax];
int t[Emax];
int k = -1;

// Функция добавления ребра в список смежности
void ADD(int v, int u)
{
    k++;
    t[k] = u;
    next_el[k] = head[v - 1];
    head[v - 1] = k;
}

// Функция вывода списка смежности для каждого вершины
void print()
{
    // Вывод списка смежности для каждого вершины
    for (int i = 0; i < Vmax; i++)
    {
        cout << (i + 1) << "->";
        for (int j = head[i]; j != -1; j = next_el[j])
            cout << t[j] << " ";
        cout << endl;
    }
}

// Функция вывода матрицы смежности графа
void printMatrix()
{
    // Вывод матрицы смежности графа
    for (int i = 0; i < Vmax; i++)
    {
        for (int j = 0; j < Vmax; j++)
        {
            if (i == j)
                cout << "0 ";

            else
            {
                int found = 0;
                for (int k = head[i]; k != -1; k = next_el[k])
                {
                    if (t[k] == j + 1)
                    {
                        found = 1;
                        break;
                    }
                }

                if (found)
                    cout << "1 ";

                else
                    cout << "0 ";
            }
        }
        cout << endl;
    }
}

// точка входа
int main()
{
    setlocale(LC_ALL, "RUS");

    // заполнение массивов
    for (int i = 0; i < Vmax; i++)
        head[i] = -1;
    for (int i = 0; i < Emax; i++)
        next_el[i] = -1;

    int V, E;

    cout << "Введите количество вершин: ";
    cin >> V;

    cout << "Введите количество рёбер: ";
    cin >> E;

    // Ввод ребер
    for (int i = 0; i < E; i++)
    {
        int v, u;
        cout << "Введите ребро " << i + 1 << ": ";
        cin >> v >> u;
        ADD(v, u);
    }
    cout << endl;

    cout << "Матрица смежности:" << endl;
    printMatrix();
    cout << endl;

    cout << "Список смежности:" << endl;
    print();
    cout << endl;

    return 0;
}

/*
test1
Введите количество вершин: 6
Введите количество рёбер: 8
Введите ребро 1: 3 2
Введите ребро 2: 3 5
Введите ребро 3: 2 6
Введите ребро 4: 5 1
Введите ребро 5: 5 4
Введите ребро 6: 1 5
Введите ребро 7: 4 5
Введите ребро 8: 6 2

Матрица смежности:
0 0 0 0 1 0
0 0 0 0 0 1
0 1 0 0 1 0
0 0 0 0 1 0
1 0 0 1 0 0
0 1 0 0 0 0

Список смежности:
1->5
2->6
3->5 2
4->5
5->4 1
6->2

test2
Введите количество вершин: 5
Введите количество рёбер: 10
Введите ребро 1: 1 2
Введите ребро 2: 1 3
Введите ребро 3: 1 4
Введите ребро 4: 2 1
Введите ребро 5: 2 3
Введите ребро 6: 3 1
Введите ребро 7: 3 2
Введите ребро 8: 3 5
Введите ребро 9: 4 1
Введите ребро 10: 5 3

Матрица смежности:
0 1 1 1 0
1 0 1 0 0
1 1 0 0 1
1 0 0 0 0
0 0 1 0 0

Список смежности:
1->4 3 2
2->3 1
3->5 2 1
4->1
5->3
*/